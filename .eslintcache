[{"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\index.tsx":"1","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\code-editor.tsx":"2","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\preview.tsx":"3","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\index.ts":"4","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"5","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\plugins\\fetch-plugin.ts":"6","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\code-cell.tsx":"7","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\resizable.tsx":"8","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\text-editor.tsx":"9","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\index.ts":"10","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\store.ts":"11","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\reducers\\index.ts":"12","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\action-types\\index.ts":"13","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\reducers\\cellsReducers.ts":"14","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\cell-list.tsx":"15","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\hooks\\use-typed-selector.ts":"16","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\cell-list-item.tsx":"17","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\cell.ts":"18","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\action-creators\\index.ts":"19","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\hooks\\use-actions.ts":"20","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\action-bar.tsx":"21","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\add-cell.tsx":"22"},{"size":477,"mtime":1670429222006,"results":"23","hashOfConfig":"24"},{"size":2332,"mtime":1670344032296,"results":"25","hashOfConfig":"24"},{"size":1594,"mtime":1670394362261,"results":"26","hashOfConfig":"24"},{"size":1043,"mtime":1670394063965,"results":"27","hashOfConfig":"24"},{"size":856,"mtime":1670303474206,"results":"28","hashOfConfig":"24"},{"size":2004,"mtime":1670227173488,"results":"29","hashOfConfig":"24"},{"size":1253,"mtime":1670432554877,"results":"30","hashOfConfig":"24"},{"size":1788,"mtime":1670347274996,"results":"31","hashOfConfig":"24"},{"size":1478,"mtime":1670427605575,"results":"32","hashOfConfig":"24"},{"size":175,"mtime":1670426804588,"results":"33","hashOfConfig":"24"},{"size":744,"mtime":1670433585331,"results":"34","hashOfConfig":"24"},{"size":238,"mtime":1670417038778,"results":"35","hashOfConfig":"24"},{"size":165,"mtime":1670433322713,"results":"36","hashOfConfig":"24"},{"size":1919,"mtime":1670433537265,"results":"37","hashOfConfig":"24"},{"size":702,"mtime":1670433698630,"results":"38","hashOfConfig":"24"},{"size":190,"mtime":1670424848819,"results":"39","hashOfConfig":"24"},{"size":718,"mtime":1670429909153,"results":"40","hashOfConfig":"24"},{"size":134,"mtime":1670416818345,"results":"41","hashOfConfig":"24"},{"size":970,"mtime":1670433379149,"results":"42","hashOfConfig":"24"},{"size":267,"mtime":1670426875204,"results":"43","hashOfConfig":"24"},{"size":966,"mtime":1670429428390,"results":"44","hashOfConfig":"24"},{"size":1028,"mtime":1670433713430,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"kgx7o6",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\index.tsx",[],["93","94"],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\code-editor.tsx",["95"],"import './code-editor.css'\r\nimport './syntax.css'\r\nimport { useRef } from 'react'\r\nimport ManacoEditor, { EditorDidMount, monaco } from '@monaco-editor/react';\r\nimport prettier from 'prettier';\r\nimport parser from 'prettier/parser-babel'\r\nimport codeShift from 'jscodeshift';\r\nimport Highlighter from 'monaco-jsx-highlighter';\r\n\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\r\n  const editorRef = useRef<any>()\r\n\r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue())\r\n    })\r\n\r\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 })\r\n\r\n    const highlighter = new Highlighter(\r\n      // @ts-ignore //ignore type check\r\n      window.monaco,\r\n      codeShift,\r\n      monacoEditor\r\n    )\r\n    highlighter.highLightOnDidChangeModelContent(\r\n      () => { },\r\n      () => { },\r\n      undefined,\r\n      () => { },\r\n    )\r\n\r\n  }\r\n\r\n  const onFormatClick = () => {\r\n    console.log(editorRef.current)\r\n    // get current value form editor\r\n    const unformatted = editorRef.current.getModel().getValue()\r\n    // format the value\r\n    const formatted = prettier.format(unformatted, {\r\n      parser: 'babel',\r\n      plugins: [parser],\r\n      useTabs: false,\r\n      semi: true,\r\n      singleQuote: true\r\n    }).replace(/\\n$/, '') //get rid of the extra new line after formatted\r\n\r\n    // set the formatted value back in the editor\r\n    editorRef.current.setValue(formatted)\r\n  }\r\n\r\n  return (\r\n    <div className='editor-wrapper'>\r\n      <button\r\n        className='button button-format is-primary is-small'\r\n        onClick={onFormatClick}>Format</button>\r\n\r\n      <ManacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        theme='dark'\r\n        language='javascript'\r\n        height=\"100%\"\r\n        options={{\r\n          wordWrap: 'on',\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true\r\n        }}\r\n      />\r\n\r\n    </div>)\r\n}\r\n\r\nexport default CodeEditor;","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\preview.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\plugins\\unpkg-path-plugin.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\plugins\\fetch-plugin.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\code-cell.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\resizable.tsx",["96"],"import \"./resizable.css\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable'\r\n\r\ninterface ResizableProps {\r\n  direction: \"horizontal\" | \"vertical\";\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\r\n  let resizableProps: ResizableBoxProps;\r\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight)\r\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth)\r\n  const [width, setWidth] = useState(window.innerWidth * 0.75)\r\n\r\n  useEffect(() => {\r\n    let timer: any\r\n    const listener = () => {\r\n      if (timer) {\r\n        clearTimeout(timer)\r\n      }\r\n      setTimeout(() => {\r\n        setInnerHeight(window.innerHeight)\r\n        setInnerWidth(window.innerWidth)\r\n        if (window.innerWidth * 0.75 < width) {\r\n          setWidth(window.innerWidth * 0.75)\r\n        }\r\n      }, 100)\r\n    }\r\n    window.addEventListener('resize', listener)\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', listener)\r\n    }\r\n  }, [])\r\n\r\n  if (direction === 'horizontal') {\r\n    resizableProps = {\r\n      className: 'resize-horizontal',\r\n      minConstraints: [innerWidth * 0.2, Infinity],\r\n      maxConstraints: [innerWidth * 0.75, Infinity],\r\n      height: Infinity,\r\n      width,\r\n      resizeHandles: ['e'],\r\n      onResizeStop: (event, data) => {\r\n        setWidth(data.size.width)\r\n      }\r\n    }\r\n  } else {\r\n    resizableProps = {\r\n      minConstraints: [Infinity, 24],\r\n      maxConstraints: [Infinity, innerHeight * 0.9],\r\n      height: 300,\r\n      width: Infinity,\r\n      resizeHandles: ['s']\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ResizableBox {...resizableProps}>\r\n      {children}\r\n    </ResizableBox>\r\n  )\r\n}\r\n\r\nexport default Resizable; ","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\text-editor.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\store.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\reducers\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\action-types\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\reducers\\cellsReducers.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\cell-list.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\hooks\\use-typed-selector.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\cell-list-item.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\cell.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\action-creators\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\hooks\\use-actions.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\action-bar.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\add-cell.tsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":40,"nodeType":"103","messageId":"104","endLine":4,"endColumn":46},{"ruleId":"105","severity":1,"message":"106","line":35,"column":6,"nodeType":"107","endLine":35,"endColumn":8,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"@typescript-eslint/no-unused-vars","'monaco' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [width]",{"range":"114","text":"115"},[1073,1075],"[width]"]