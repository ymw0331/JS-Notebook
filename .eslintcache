[{"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\index.tsx":"1","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\code-editor.tsx":"2","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\preview.tsx":"3","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\index.ts":"4","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"5","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\plugins\\fetch-plugin.ts":"6","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\code-cell.tsx":"7","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\resizable.tsx":"8","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\text-editor.tsx":"9","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\index.ts":"10","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\store.ts":"11","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\reducers\\index.ts":"12","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\action-types\\index.ts":"13","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\reducers\\cellsReducers.ts":"14"},{"size":427,"mtime":1670415971806,"results":"15","hashOfConfig":"16"},{"size":2332,"mtime":1670344032296,"results":"17","hashOfConfig":"16"},{"size":1594,"mtime":1670394362261,"results":"18","hashOfConfig":"16"},{"size":1043,"mtime":1670394063965,"results":"19","hashOfConfig":"16"},{"size":856,"mtime":1670303474206,"results":"20","hashOfConfig":"16"},{"size":2004,"mtime":1670227173488,"results":"21","hashOfConfig":"16"},{"size":1053,"mtime":1670394163902,"results":"22","hashOfConfig":"16"},{"size":1788,"mtime":1670347274996,"results":"23","hashOfConfig":"16"},{"size":1287,"mtime":1670401054630,"results":"24","hashOfConfig":"16"},{"size":96,"mtime":1670415898653,"results":"25","hashOfConfig":"16"},{"size":516,"mtime":1670419491941,"results":"26","hashOfConfig":"16"},{"size":238,"mtime":1670417038778,"results":"27","hashOfConfig":"16"},{"size":167,"mtime":1670414549768,"results":"28","hashOfConfig":"16"},{"size":1897,"mtime":1670419521013,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"kgx7o6",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\index.tsx",[],["62","63"],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\code-editor.tsx",["64"],"import './code-editor.css'\r\nimport './syntax.css'\r\nimport { useRef } from 'react'\r\nimport ManacoEditor, { EditorDidMount, monaco } from '@monaco-editor/react';\r\nimport prettier from 'prettier';\r\nimport parser from 'prettier/parser-babel'\r\nimport codeShift from 'jscodeshift';\r\nimport Highlighter from 'monaco-jsx-highlighter';\r\n\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\r\n  const editorRef = useRef<any>()\r\n\r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue())\r\n    })\r\n\r\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 })\r\n\r\n    const highlighter = new Highlighter(\r\n      // @ts-ignore //ignore type check\r\n      window.monaco,\r\n      codeShift,\r\n      monacoEditor\r\n    )\r\n    highlighter.highLightOnDidChangeModelContent(\r\n      () => { },\r\n      () => { },\r\n      undefined,\r\n      () => { },\r\n    )\r\n\r\n  }\r\n\r\n  const onFormatClick = () => {\r\n    console.log(editorRef.current)\r\n    // get current value form editor\r\n    const unformatted = editorRef.current.getModel().getValue()\r\n    // format the value\r\n    const formatted = prettier.format(unformatted, {\r\n      parser: 'babel',\r\n      plugins: [parser],\r\n      useTabs: false,\r\n      semi: true,\r\n      singleQuote: true\r\n    }).replace(/\\n$/, '') //get rid of the extra new line after formatted\r\n\r\n    // set the formatted value back in the editor\r\n    editorRef.current.setValue(formatted)\r\n  }\r\n\r\n  return (\r\n    <div className='editor-wrapper'>\r\n      <button\r\n        className='button button-format is-primary is-small'\r\n        onClick={onFormatClick}>Format</button>\r\n\r\n      <ManacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        theme='dark'\r\n        language='javascript'\r\n        height=\"100%\"\r\n        options={{\r\n          wordWrap: 'on',\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true\r\n        }}\r\n      />\r\n\r\n    </div>)\r\n}\r\n\r\nexport default CodeEditor;",["65","66"],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\preview.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\plugins\\unpkg-path-plugin.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\bundler\\plugins\\fetch-plugin.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\code-cell.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\resizable.tsx",["67"],"import \"./resizable.css\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable'\r\n\r\ninterface ResizableProps {\r\n  direction: \"horizontal\" | \"vertical\";\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\r\n  let resizableProps: ResizableBoxProps;\r\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight)\r\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth)\r\n  const [width, setWidth] = useState(window.innerWidth * 0.75)\r\n\r\n  useEffect(() => {\r\n    let timer: any\r\n    const listener = () => {\r\n      if (timer) {\r\n        clearTimeout(timer)\r\n      }\r\n      setTimeout(() => {\r\n        setInnerHeight(window.innerHeight)\r\n        setInnerWidth(window.innerWidth)\r\n        if (window.innerWidth * 0.75 < width) {\r\n          setWidth(window.innerWidth * 0.75)\r\n        }\r\n      }, 100)\r\n    }\r\n    window.addEventListener('resize', listener)\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', listener)\r\n    }\r\n  }, [])\r\n\r\n  if (direction === 'horizontal') {\r\n    resizableProps = {\r\n      className: 'resize-horizontal',\r\n      minConstraints: [innerWidth * 0.2, Infinity],\r\n      maxConstraints: [innerWidth * 0.75, Infinity],\r\n      height: Infinity,\r\n      width,\r\n      resizeHandles: ['e'],\r\n      onResizeStop: (event, data) => {\r\n        setWidth(data.size.width)\r\n      }\r\n    }\r\n  } else {\r\n    resizableProps = {\r\n      minConstraints: [Infinity, 24],\r\n      maxConstraints: [Infinity, innerHeight * 0.9],\r\n      height: 300,\r\n      width: Infinity,\r\n      resizeHandles: ['s']\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ResizableBox {...resizableProps}>\r\n      {children}\r\n    </ResizableBox>\r\n  )\r\n}\r\n\r\nexport default Resizable; ","D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\components\\text-editor.tsx",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\store.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\reducers\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\action-types\\index.ts",[],"D:\\Users\\ymw03\\Desktop\\react-ts-code-editor\\src\\state\\reducers\\cellsReducers.ts",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":40,"nodeType":"74","messageId":"75","endLine":4,"endColumn":46},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":35,"column":6,"nodeType":"80","endLine":35,"endColumn":8,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'monaco' is defined but never used.","Identifier","unusedVar",["82"],["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [width]",{"range":"87","text":"88"},[1073,1075],"[width]"]